use std::fs::File;
use std::io::prelude::*;

pub fn get_mimetype(file_path: &File) -> Option<String> {
    if file_path.is_directory() {
        Some("inode/directory")
    } else {
        if let Some(ext) = file_path.ext.as_ref() {
            match ext.as_str() {
                "ez" => Some("application/activemessage"),
                "anx" => Some("application/annodex"),
                "atom" => Some("application/atom+xml"),
                "atomcat" => Some("application/atomcat+xml"),
                "atomsrv" => Some("application/atomserv+xml"),
                "lin" => Some("application/bbolin"),
                "cu" => Some("application/cu-seeme"),
                "davmount" => Some("application/davmount+xml"),
                "dcm" => Some("application/dicom"),
                "tsp" => Some("application/dsptype"),
                "es" => Some("application/ecmasscript"),
                "epub" => Some("application/epub+zip"),
                "otf" => Some("application/font-sfnt"),
                "ttf" => Some("application/font-sfnt"),
                "pfr" => Some("application/font-tdpfr"),
                "woff" => Some("application/font-woff"),
                "spl" => Some("application/futuresplash"),
                "gz" => Some("application/gzip"),
                "hta" => Some("application/hta"),
                "jar" => Some("application/java-archive"),
                "ser" => Some("application/java-serelialized-object"),
                "class" => Some("application/java-vm"),
                "js" => Some("application/javascript"),
                "mjs" => Some("application/javascript"),
                "json" => Some("application/json"),
                "jsonld" => Some("application/ld+json"),
                "m3g" => Some("application/m3g"),
                "hqx" => Some("application/mac-binhex40"),
                "cpt" => Some("application/mac-compactpro"),
                "nb" => Some("application/mathematica"),
                "npb" => Some("application/mathematica"),
                "mbox" => Some("application/mbox"),
                "mdb" => Some("application/msaccess"),
                "doc" => Some("application/msword"),
                "dot" => Some("application/msword"),
                "mxf" => Some("application/mxf"),
                "bin" => Some("application/octet-stream"),
                "deploy" => Some("application/octet-stream"),
                "msu" => Some("application/octet-stream"),
                "msp" => Some("application/octet-stream"),
                "oda" => Some("application/oda"),
                "opf" => Some("application/oebps-package+xml"),
                "ogx" => Some("application/ogg"),
                "one" => Some("application/onenote"),
                "onetoc2" => Some("application/onenote"),
                "onetmp" => Some("application/onenote"),
                "onepkg" => Some("application/onenote"),
                "pdf" => Some("application/pdf"),
                "pgp" => Some("application/pgp-encrypted"),
                "key" => Some("application/pgp-keys"),
                "sig" => Some("application/pgp-signature"),
                "prf" => Some("application/pics-rules"),
                "ps" => Some("application/postscript"),
                "ai" => Some("application/postscript"),
                "eps" => Some("application/postscript"),
                "epsi" => Some("application/postscript"),
                "epsf" => Some("application/postscript"),
                "eps2" => Some("application/postscript"),
                "eps3" => Some("application/postscript"),
                "rar" => Some("application/rar"),
                "rdf" => Some("application/rdf+xml"),
                "rtf" => Some("application/rtf"),
                "stl" => Some("application/sla"),
                "smi" => Some("application/smil+xml"),
                "smil" => Some("application/smil+xml"),
                "wasm" => Some("application/wasm"),
                "xhtml" => Some("application/xhtml+xml"),
                "xht" => Some("application/xhtml+xml"),
                "xml" => Some("application/xml"),
                "xsd" => Some("application/xml"),
                "xsl" => Some("application/xslt+xml"),
                "xslt" => Some("application/xslt+xml"),
                "xspf" => Some("application/xspf+xml"),
                "zip" => Some("application/zip"),
                "apk" => Some("application/vnd.android.package-archive"),
                "cdy" => Some("application/vnd.cinderella"),
                "deb" => Some("application/vnd.debian.binary-package"),
                "ddeb" => Some("application/vnd.debian.binary-package"),
                "udeb" => Some("application/vnd.debian.binary-package"),
                "sfd" => Some("application/vnd.font-fontforge-sfd"),
                "kml" => Some("application/vnd.google-earth.kml+xml"),
                "kmz" => Some("application/vnd.google-earth.kmz"),
                "xul" => Some("application/vnd.mozilla.xul+xml"),
                "xlb" => Some("application/vnd.ms-excel"),
                "xlt" => Some("application/vnd.ms-excel"),
                "xlam" => Some("application/vnd.ms-excel.addin.macroEnabled.12"),
                "xlsb" => Some("application/vnd.ms-excel.sheet.binary.macroEnabled.12"),
                "xlsm" => Some("application/vnd.ms-excel.sheet.macroEnabled.12"),
                "xltm" => Some("application/vnd.ms-excel.template.macroEnabled.12"),
                "thmx" => Some("application/vnd.ms-officetheme"),
                "cat" => Some("application/vnd.ms-pki.seccat"),
                "ppt" => Some("application/vnd.ms-powerpoint"),
                "pps" => Some("application/vnd.ms-powerpoint"),
                "ppam" => Some("application/vnd.ms-powerpoint.addin.macroEnabled.12"),
                "pptm" => Some("application/vnd.ms-powerpoint.presentation.macroEnabled.12"),
                "sldm" => Some("application/vnd.ms-powerpoint.slide.macroEnabled.12"),
                "ppsm" => Some("application/vnd.ms-powerpoint.slideshow.macroEnabled.12"),
                "potm" => Some("application/vnd.ms-powerpoint.template.macroEnabled.12"),
                "docm" => Some("application/vnd.ms-word.document.macroEnabled.12"),
                "dotm" => Some("application/vnd.ms-word.template.macroEnabled.12"),
                "odc" => Some("application/vnd.oasis.opendocument.chart"),
                "odf" => Some("application/vnd.oasis.opendocument.formula"),
                "odb" => Some("application/vnd.oasis.opendocument.database"),
                "odg" => Some("application/vnd.oasis.opendocument.graphics"),
                "otg" => Some("application/vnd.oasis.opendocument.graphics-template"),
                "odi" => Some("application/vnd.oasis.opendocument.image"),
                "odp" => Some("application/vnd.oasis.opendocument.presentation"),
                "otp" => Some("application/vnd.oasis.opendocument.presentation-template"),
                "ods" => Some("application/vnd.oasis.opendocument.spreadsheet"),
                "ots" => Some("application/vnd.oasis.opendocument.spreadsheet-template"),
                "odt" => Some("application/vnd.oasis.opendocument.text"),
                "odm" => Some("application/vnd.oasis.opendocument.text-master"),
                "ott" => Some("application/vnd.oasis.opendocument.text-template"),
                "oth" => Some("application/vnd.oasis.opendocument.text-web"),
                "pptx" => Some("application/vnd.openxmlformats-officedocument.presentationml.presentation"),
                "sldx" => Some("application/vnd.openxmlformats-officedocument.presentationml.slide"),
                "ppsx" => Some("application/vnd.openxmlformats-officedocument.presentationml.slideshow"),
                "potx" => Some("application/vnd.openxmlformats-officedocument.presentationml.template"),
                "xlsx" => Some("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
                "xltx" => Some("application/vnd.openxmlformats-officedocument.spreadsheetml.template"),
                "docx" => Some("application/vnd.openxmlformats-officedocument.wordprocessingml.document"),
                "dotx" => Some("application/vnd.openxmlformats-officedocument.wordprocessingml.template"),
                "cod" => Some("application/vnd.rim.cod"),
                "mmf" => Some("application/vnd.shana.informed.package"),
                _ => None
            } else {
                None
            }
        }
    }
}
